#pragma once
#include <string>
#include "canvas.h"

struct ppm_t
{
	// MEMBER VARIABLES
	std::string data{};

	// CONSTRUCTORS
	/**
	 * @brief Constructs a `ppm_t` object from a given canvas and optional maximum
	 *        line length for the PPM file output.
	 *
	 * This constructor generates a PPM (Portable PixMap) representation of the canvas,
	 * which includes pixel data and the PPM header. The canvas is converted to a PPM
	 * format, and the resulting pixel data is formatted to ensure that each line in the
	 * output does not exceed the specified maximum number of characters.
	 *
	 * If `max_chars` is not provided, the default value of `70` characters per line
	 * is used. The PPM format will attempt to keep each line within this length for
	 * better readability and to avoid excessively long lines.
	 *
	 * @param canvas The `canvas_t` object representing the canvas to be converted
	 *               into PPM format. This object contains the pixel data that will
	 *               be used to create the PPM output.
	 * @param max_chars (Optional) The maximum number of characters allowed per line
	 *                   in the PPM file. The default is 70. This value controls the
	 *                   width of each line in the pixel data section of the PPM file.
	 *
	 * @note The PPM format generated by this constructor will be a plain text format
	 *       that includes both the header (which specifies the image format and dimensions)
	 *       and the pixel data.
	 */
	ppm_t(const canvas_t& canvas, int max_chars = 70);

	/**
	 * @brief Constructs a `ppm_t` object by loading the contents of a PPM file.
	 *
	 * This constructor opens the specified PPM file, reads its contents,
	 * and initializes the `ppm_t` object with the data from the file.
	 * It assumes the file is in the PPM format (e.g., ASCII or binary).
	 *
	 * @param filepath The path to the PPM file that should be loaded.
	 *
	 * @throws std::runtime_error If the file cannot be opened or the contents
	 *         do not conform to a valid PPM format.
	 */
	ppm_t(const char* filepath);

	// MEMBER FUNCTIONS
	/**
	 * @brief Writes the PPM data to a file.
	 *
	 * This method takes the current PPM data stored in the object and writes it
	 * to a file at the specified location. The file will be created if it does
	 * not already exist, or overwritten if it does.
	 *
	 * The method assumes that the PPM data is in a valid format and that it is
	 * ready to be written to the file. It supports writing in the standard
	 * PPM format (ASCII or binary, depending on the implementation).
	 *
	 * @param filepath The path to the file where the PPM data will be written.
	 *
	 * @throws std::runtime_error If the file cannot be opened or written to.
	 */
	void write_to_file(const char* filepath) const;
};